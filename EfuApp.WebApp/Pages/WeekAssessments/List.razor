@page "/weekassessments/list"
@inject NavigationManager NavManager
@inject IViewTermByIdUseCase ViewTermByIdUseCase
@inject IViewTermsByNameUseCase ViewTermsByNameUseCase

<div class="page-title">Week Assessments by Term</div>
<br />
<div class="row">
    <div class="col">
        <label for="trm">Select Term</label>
        <select id="termName" class="form-xonreol" @onchange="@TermChanged">
            <option value="">-- Select Term --</option>
            @foreach (var trm in listTerms)
            {
                <option value="@trm.TermName">@trm.TermName</option>
            }
        </select>
    </div>
</div>
<br />
<div class="d-flex justify-content-left">
    <WeekAssessmentListComponent SelectedTerm = "@selectedTerm"></WeekAssessmentListComponent>    
</div>
<br />

@code {
    public string? selectedTerm = string.Empty;

    private List<Term> listTerms = new List<Term>();


    protected async override Task OnInitializedAsync()
    {
        listTerms = (await ViewTermsByNameUseCase.ExecuteAsync("")).ToList();
    }

    void TermChanged(ChangeEventArgs args)
    {
        selectedTerm = args.Value?.ToString();
       

    }

    private void BackToList()
    {
        NavManager.NavigateTo("/terms/list");
    }

    // private void GoToEdit()
    // {
    //     NavManager.NavigateTo($"/weekassessments/edit/{weekassessment.weekAsId}");
    // }

    // private async Task SaveCourse()
    // {
    //     await EditTermUseCase.ExecuteAsync(this.term);
    //     NavManager.NavigateTo("/terms/list");
    // }

} 