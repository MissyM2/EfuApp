@page "/weekAssessments/edit/{WaId:int}"

@inject NavigationManager NavManager
@inject IEditWeekAssessmentUseCase EditWeekAssessmentUseCase
@inject IViewTermsByNameUseCase ViewTermsByNameUseCase
@inject IViewCoursesByNameUseCase ViewCoursesByNameUseCase
@inject IViewWeekAssessmentByIdUseCase ViewWeekAssessmentByIdUseCase

<div class="page-title">Edit WeekAssessment</div>

<EditForm Model="weekAssessment" OnValidSubmit="SaveWeekAssessment">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="likedleast">Liked Least</label>
        <InputText id="likedleast" @bind-Value="weekAssessment.LikedLeast" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="likedmost">Liked Most</label>
        <InputText id="likedmost" @bind-Value="weekAssessment.LikedMost" class="form-control"></InputText>
    </div>

     <div class="form-group">
        <label for="mostdifficult">Most Difficult</label>
        <InputText id="mostdifficult" @bind-Value="weekAssessment.MostDifficult" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="leastdifficult">Least Difficult</label>
        <InputText id="leastdifficult" @bind-Value="weekAssessment.LeastDifficult" class="form-control"></InputText>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancel</button>
</EditForm>


@code {
    [Parameter]
    public int WaId { get; set; }

    private WeekAssessment weekAssessment = new WeekAssessment();
    private List<Term> listTerms = new List<Term>();
    private List<Course> listCourses = new List<Course>();

    protected override async Task OnInitializedAsync()
    {
        listTerms = (await ViewTermsByNameUseCase.ExecuteAsync("")).ToList();
        listCourses = (await ViewCoursesByNameUseCase.ExecuteAsync("")).ToList();
    }

    protected override async Task OnParametersSetAsync() => this.weekAssessment = await ViewWeekAssessmentByIdUseCase.ExecuteAsync(this.WaId);

    private async Task SaveWeekAssessment()
    {
        await EditWeekAssessmentUseCase.ExecuteAsync(this.weekAssessment);
        NavManager.NavigateTo("/weekAssessments/list");
    }

    private void Cancel() => NavManager.NavigateTo("/weekAssessments/list");

}